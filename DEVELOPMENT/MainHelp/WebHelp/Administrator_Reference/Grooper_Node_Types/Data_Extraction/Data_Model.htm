<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 <meta name="generator" content="Adobe RoboHelp 11" />
<title>Data Model</title>
<link rel="StyleSheet" href="../../../default.css" type="text/css" /><script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../../../whmsg.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript" src="../../../whver.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whutils.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whproxy.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whlang.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whtopic.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.replace(strUrl.substring(0, n));
		bc = strUrl.substring(n+3);
	}

	addTocInfo("Administrator Reference\nGrooper Node Types\nData Extraction\nData Model");
addButton("show",BTN_IMG,"Show","","","","",0,0,"../../../whd_show0.gif","../../../whd_show2.gif","../../../whd_show1.gif");
addButton("hide",BTN_IMG,"Hide","","","","",0,0,"../../../whd_hide0.gif","../../../whd_hide2.gif","../../../whd_hide1.gif");
addButton("prev",BTN_IMG,"<<","","","","",0,0,"../../../whd_prev0.gif","../../../whd_prev2.gif","../../../whd_prev1.gif");
addButton("next",BTN_IMG,">>","","","","",0,0,"../../../whd_next0.gif","../../../whd_next2.gif","../../../whd_next1.gif");


	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("../../../Index.htm", "", ">", "Home", "../../../Start_Page.htm");
document.write("<a href=\"../../Administrator_Reference.htm\">Administrator Reference<\/a> > <a href=\"../Grooper_Node_Types.htm\">Grooper Node Types<\/a> > <a href=\"Data_Column.htm\">Data Extraction<\/a> > Data Model<\/p>");

}
else
	if (window.gbIE4)
		document.location.reload();
    
onLoadHandler = function()
{
	if (window.setRelStartPage)
	{
    setTimeout("setRelStartPage('../../../Index.htm');", 1)

    setTimeout("UpdateBreadCrumbsMarker();", 1);
    }
} 

if (window.addEventListener){  
	window.addEventListener('load', onLoadHandler, false);   
} else if (window.attachEvent){  
	window.attachEvent('onload', onLoadHandler);  
}

function onSetStartPage()
{
	autoSync(1);
	sendSyncInfo();
	sendAveInfoOut();
}
//-->
//]]></script>
</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
//]]></script>
<script type="text/javascript" src="../../../ehlpdhtm.js" language="JavaScript1.2"></script>

<div style="width: 100%; position: relative;" id="header">
	<table class="PageHeader" cellspacing="0" width="100%">
		<col style="width: 50%;" />
		<col style="width: 50%;" />
		<tr>
			<td style="padding-left: 0px; padding-top: 0px; padding-right: 0px; 
				 padding-bottom: 0px;">Grooper 2.70 
			 Documentation</td>
			<td style="padding-left: 0px; padding-top: 0px; padding-right: 0px; 
				 padding-bottom: 0px;">
   <p style="text-align: right; margin: 0px;"><img src="../../../images/GrooperLogo.png" alt="" style="border: none; 
			 margin: 0px;" width="190" height="64" border="0" /></p></td>
		</tr>
	</table>
	<hr align="center" />
</div>


<table>
<tr>
<td><img src='../../../images/TypeIcons/Grooper.Core.DataModel.Normal.png' height = '32' width = '32' /></td>
<td><h1>Data Model</h1></td>
<table>
</tr>
</table>
Defines the data elements for a content type.

<p>A Data Model is a hierarchy of [Data Section], [Data Field], [Data Table], and [Data Column] objects which define the internal data structure
of a content type.  A Data Model can be as simple as a list of fields (i.e. Invoice Date, Invoice Number, Invoice Amount,  and
PO Number), or can be a complex hierarchy of sections, subsections, tables, and fields.  Data Models are created as children of
the various [Content Types] in a [Content Model], using the 'Create Data Model' command, found on the property panel of the content type.</p><p>Data Models inherit the [Data Elements] defined on parent [Content Types].  As such, a derived type may not have data element
names which conflict those defined on a base type.</p>

<br/><br/><b>Inherits from:</b> [Container Data Element]<br/><h2>Properties</h2>
<table class='ObjectProperties' cellspacing='0'>
  <col style='width:25%'/>
  <col style='width:75%'/>
  <tr>    <th>Property Name</th>
    <th>Description</th>
  </tr>  <tr>
     <td class='Category' colspan='2'>General</td>
  </tr>
  <tr>    <td>Show Content Type</td>
    <td><table>
   <tr><td>Type: [Boolean], Default: False</td></tr>
   <tr><td>If enabled, the content type will be displayed as the first field in the [Index Panel]. Enabling this property allows users to view and edit the Content Type assigned to a document from the [Index Panel].
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Content Type Width</td>
    <td><table>
   <tr><td>Type: [Int32], Default: 0, Range: 60 - 300</td></tr>
   <tr><td>When 'Show Content Type' is set to true, specifies the width of the control.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Description</td>
    <td><table>
   <tr><td>Type: [String]</td></tr>
   <tr><td>Generic property allowing an administrator to document the purpose of this Grooper Node.
</td></tr>
</table>
</td>
  </tr>  <tr>
     <td class='Category' colspan='2'>Multi-Level Display</td>
  </tr>
  <tr>    <td>Show Level Header</td>
    <td><table>
   <tr><td>Type: [Boolean], Default: True</td></tr>
   <tr><td>If enabled, a header will be displayed with each folder level.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Level Header Alignment</td>
    <td><table>
   <tr><td>Type: [ContentAlignment], Default: MiddleLeft</td></tr>
   <tr><td>The alignment for display level headers. Can be one of the following values:<br />
<ul>
<li><b>TopLeft</b>: Content is vertically aligned at the top, and horizontally aligned on the left.
</li>
<li><b>TopCenter</b>: Content is vertically aligned at the top, and horizontally aligned at the center.
</li>
<li><b>TopRight</b>: Content is vertically aligned at the top, and horizontally aligned on the right.
</li>
<li><b>MiddleLeft</b>: Content is vertically aligned in the middle, and horizontally aligned on the left.
</li>
<li><b>MiddleCenter</b>: Content is vertically aligned in the middle, and horizontally aligned at the center.
</li>
<li><b>MiddleRight</b>: Content is vertically aligned in the middle, and horizontally aligned on the right.
</li>
<li><b>BottomLeft</b>: Content is vertically aligned at the bottom, and horizontally aligned on the left.
</li>
<li><b>BottomCenter</b>: Content is vertically aligned at the bottom, and horizontally aligned at the center.
</li>
<li><b>BottomRight</b>: Content is vertically aligned at the bottom, and horizontally aligned on the right.
</li>
</ul>

</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Level Header Background Color</td>
    <td><table>
   <tr><td>Type: [Color], Default: Control</td></tr>
   <tr><td>The background color for display level headers.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Level Header Foreground Color</td>
    <td><table>
   <tr><td>Type: [Color], Default: ControlText</td></tr>
   <tr><td>The foreground color for display level headers.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Level Header Font Style</td>
    <td><table>
   <tr><td>Type: [FontStyle], Default: Regular</td></tr>
   <tr><td>The font style for display level headers. A combination of the following flags:<br />
<ul>
<li><b>Regular</b>: Normal text.
</li>
<li><b>Bold</b>: Bold text.
</li>
<li><b>Italic</b>: Italic text.
</li>
<li><b>Underline</b>: Underlined text.
</li>
<li><b>Strikeout</b>: Text with a line through the middle.
</li>
</ul>

</td></tr>
</table>
</td>
  </tr>  <tr>
     <td class='Category' colspan='2'>Child Element Options</td>
  </tr>
  <tr>    <td>Child Label Width</td>
    <td><table>
   <tr><td>Type: [Int32], Default: 100, Range: 60 - 300</td></tr>
   <tr><td>The width to be used for child field labels.  Only applicable when the child item's Label Position property is set to Left.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Show Fields in Grid</td>
    <td><table>
   <tr><td>Type: [Boolean], Default: False</td></tr>
   <tr><td>If enabled, child field will be displayed in a grid in the [Index Panel], rather than as individual controls.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Field Label Background Color</td>
    <td><table>
   <tr><td>Type: [Color], Default: Control</td></tr>
   <tr><td>The background color to be used for field labels when 'Show Fields in Grid' is enabled.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Field Label Foreground Color</td>
    <td><table>
   <tr><td>Type: [Color], Default: ControlText</td></tr>
   <tr><td>The foreground color to be used for field labels when 'Show Fields in Grid' is enabled.
</td></tr>
</table>
</td>
  </tr>  <tr>
     <td class='Category' colspan='2'>Appearance</td>
  </tr>
  <tr>    <td>Background Color</td>
    <td><table>
   <tr><td>Type: [Color], Default: Control</td></tr>
   <tr><td>The background color for this item.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Foreground Color</td>
    <td><table>
   <tr><td>Type: [Color], Default: ControlText</td></tr>
   <tr><td>The foreground color for this item.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Visible</td>
    <td><table>
   <tr><td>Type: [Boolean], Default: True</td></tr>
   <tr><td>Controls whether this item is visible in the user interface.
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Label Position</td>
    <td><table>
   <tr><td>Type: [LabelPositionEnum], Default: Left</td></tr>
   <tr><td>Controls how the label for this item is displayed. Can be one of the following values:<br />
<ul>
<li><b>Left</b>: The label is displayed to the left of the item.
</li>
<li><b>Above</b>: The label is displayed above the item.
</li>
<li><b>Below</b>: The label is displayed below the item.
</li>
<li><b>None</b>: The label will not be displayed.
</li>
</ul>

</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Label Alignment</td>
    <td><table>
   <tr><td>Type: [ContentAlignment], Default: MiddleLeft</td></tr>
   <tr><td>The text alignment to be used for the data element's label. Can be one of the following values:<br />
<ul>
<li><b>TopLeft</b>: Content is vertically aligned at the top, and horizontally aligned on the left.
</li>
<li><b>TopCenter</b>: Content is vertically aligned at the top, and horizontally aligned at the center.
</li>
<li><b>TopRight</b>: Content is vertically aligned at the top, and horizontally aligned on the right.
</li>
<li><b>MiddleLeft</b>: Content is vertically aligned in the middle, and horizontally aligned on the left.
</li>
<li><b>MiddleCenter</b>: Content is vertically aligned in the middle, and horizontally aligned at the center.
</li>
<li><b>MiddleRight</b>: Content is vertically aligned in the middle, and horizontally aligned on the right.
</li>
<li><b>BottomLeft</b>: Content is vertically aligned at the bottom, and horizontally aligned on the left.
</li>
<li><b>BottomCenter</b>: Content is vertically aligned at the bottom, and horizontally aligned at the center.
</li>
<li><b>BottomRight</b>: Content is vertically aligned at the bottom, and horizontally aligned on the right.
</li>
</ul>

</td></tr>
</table>
</td>
  </tr>  <tr>
     <td class='Category' colspan='2'>Behavior</td>
  </tr>
  <tr>    <td>Preserve Character Data</td>
    <td><table>
   <tr><td>Type: [Boolean], Default: False</td></tr>
   <tr><td>Indicates whether character-level position and confidence data should be saved. If true, character-level detail will be saved with the data element.  If false, only the raw text of the element's value
will be saved.  As storing this information increases storage requirements and reduces performance, this feature should only
be enabled for individual data elements in cases where it is needed.
<p>Character-level data can be useful in custom activities or custom export sceanrios, and is also used in certain built-in
Grooper activities.</p>
</td></tr>
</table>
</td>
  </tr>  <tr>    <td>Rubberband OCR Profile</td>
    <td><table>
   <tr><td>Type: [OCR Profile]</td></tr>
   <tr><td>The [OCR Profile] to use for rubberband OCR.
(See [OCR Profile])</td></tr>
</table>
</td>
  </tr></table>

<h2>Related Types</h2>
<table class='NoBorder'>
<tr><td>[OCR Profile]</td></tr>
</table>

<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);

highlightSearch();
//-->
//]]></script>
</body>
</html>
