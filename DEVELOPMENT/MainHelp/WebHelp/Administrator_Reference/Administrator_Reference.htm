<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 <meta name="generator" content="Adobe RoboHelp 11" />
<title>Administrator Reference</title>
<link rel="StyleSheet" href="../default.css" type="text/css" /><script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript" src="../whver.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.replace(strUrl.substring(0, n));
		bc = strUrl.substring(n+3);
	}

	addTocInfo("Administrator Reference\nAdministrator Reference");


	document.write("<p style=\"text-align:left\"> ");
AddMasterBreadcrumbs("../Index.htm", "", "&gt;", "Home", "../Start_Page.htm");
document.write("<a href=\"Administrator_Reference.htm\">Administrator Reference<\/a> &gt; Administrator Reference<\/p>");

}
else
	if (window.gbIE4)
		document.location.reload();
    
onLoadHandler = function()
{
	if (window.setRelStartPage)
	{
    setTimeout("setRelStartPage('../Index.htm');", 1)

    setTimeout("UpdateBreadCrumbsMarker();", 1);
    }
} 

if (window.addEventListener){  
	window.addEventListener('load', onLoadHandler, false);   
} else if (window.attachEvent){  
	window.attachEvent('onload', onLoadHandler);  
}

function onSetStartPage()
{
	autoSync(1);
	sendSyncInfo();
	sendAveInfoOut();
}
//-->
//]]></script>
</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
//]]></script>
<script type="text/javascript" src="../ehlpdhtm.js" language="JavaScript1.2"></script>

<div style="width: 100%; position: relative;" id="header">
	<table class="PageHeader" cellspacing="0" width="100%">
		<col style="width: 50%;" />
		<col style="width: 50%;" />
		<tr>
			<td style="padding-left: 0px; padding-top: 0px; padding-right: 0px; 
				 padding-bottom: 0px;">Grooper 2.70 
			 Documentation</td>
			<td style="padding-left: 0px; padding-top: 0px; padding-right: 0px; 
				 padding-bottom: 0px;">
   <p style="text-align: right; margin: 0px;"><img src="../images/GrooperLogo.png" alt="" style="border: none; 
			 margin: 0px;" width="190" height="64" border="0" /></p></td>
		</tr>
	</table>
	<hr align="center" />
</div>


<h2>Administrator Reference</h2>
<p>The following sections provide documentation for the objects types which can be created and configured by Grooper administrators.</p>
<table class='ObjectProperties' cellspacing='0'>
  <col style='width:25%'/>
  <col style='width:75%'/>
  <tr>
     <th>Name</th>
     <th>Description</th>
  </tr>
  <tr>
     <td><a href='Grooper_Types_List.htm'>Grooper Types</a></td>
     <td>Master List of all Grooper Types on a single page.</td>
  </tr>
  <tr>
     <td><a href='Object_Command_List.htm'>Object Commands</a></td>
     <td>List of all Object Commands defined in Grooper.</td>
  </tr>
  <tr>
     <td><a href='Activity_Types/Activity_Types.htm'>Activity Types</a></td>
     <td>Activities define work to be performed on objects in a batch, and define settings which control how the work is performed. Activities fall into two general categories:  Attended Activities, which are performed by a human operator in a Grooper client application,
and Unattended Activities, which are performed by code.
</td>
  </tr>
  <tr>
     <td><a href='Attended_Client_Types/Attended_Client_Types.htm'>Attended Client Types</a></td>
     <td>Provides a configurable user interface for human review of documents or pages in a batch.
</td>
  </tr>
  <tr>
     <td><a href='Batch_Object_Types/Batch_Object_Types.htm'>Batch Object Types</a></td>
     <td>Batch Objects represent items that can appear in Batches. Currently these are <a href='Batch_Object_Types/Batch_Processing/Batch_Folder.htm'>Batch Folders</a> and <a href='Batch_Object_Types/Batch_Processing/Batch_Page.htm'>Batch Pages</a>.
</td>
  </tr>
  <tr>
     <td><a href='Batch_View_Types/Batch_View_Types.htm'>Batch View Types</a></td>
     <td>Batch Views are controls that display Grooper <a href='Grooper_Node_Types/Batch_Processing/Batch.htm'>Batches</a> in the <a href='Attended_Client_Types/Attended_Client_Types.htm'>Attended Client</a> Application. Custom batch view controls which work in Attended Client can be created by inheriting from this class.  At minimum, base classes should override the
Initialize() method, the OnNodeModified() method, the FocusedItem property, and the SelectedItems property.
</td>
  </tr>
  <tr>
     <td><a href='Capture_Device_Types/Capture_Device_Types.htm'>Capture Device Types</a></td>
     <td>Capture Devices provide connectivity to hardware capture devices, such as ISIS or TWAIN document scanners. Each <a href='Grooper_Node_Types/Profiles/Scanner_Profile.htm'>Scanner Profile</a> in Grooper is associated with a capture device, specified at the time the Scanner Profile is created in
the <a href='../User_Interface_Reference/Grooper_UI_Elements/Other_Grooper_Controls/Scan_Control.htm'>Scan Control</a>.
</td>
  </tr>
  <tr>
     <td><a href='Capture_Protocol_Types/Capture_Protocol_Types.htm'>Capture Protocol Types</a></td>
     <td>Capture Protocols define a system of rules governing how Applications communicate with Capture-related devices such as Scanners.
</td>
  </tr>
  <tr>
     <td><a href='Capture_Zone_Types/Capture_Zone_Types.htm'>Capture Zone Types</a></td>
     <td>Capture Zones associate regions on a page with Data Elements in a <a href='Data_Element_Types/Data_Extraction/Data_Model.htm'>Data Model</a>, and are used to facilitate zonal data capture. Capture Zones are created as children of the Data Element Profiles stored on Content Types, using the <a href='../User_Interface_Reference/Grooper_UI_Elements/Other_Grooper_Controls/Data_Element_Profile_Manager.htm'>Data Element Profile Manager</a>
control in <a href='../User_Interface_Reference/Grooper_Administration.htm'>Grooper Administration</a>.
</td>
  </tr>
  <tr>
     <td><a href='Classify_Method_Types/Classify_Method_Types.htm'>Classify Method Types</a></td>
     <td>Classify Metheds define classification mechanisms which are used in <a href='Grooper_Node_Types/Content_Models/Content_Model.htm'>Content Models</a>.
</td>
  </tr>
  <tr>
     <td><a href='Collation_Provider_Types/Collation_Provider_Types.htm'>Collation Provider Types</a></td>
     <td>Collation providers define various methods of processing the the output of a <a href='Grooper_Node_Types/Data_Extraction/Data_Type.htm'>Data Type</a> object.
</td>
  </tr>
  <tr>
     <td><a href='Content_Link_Types/Content_Link_Types.htm'>Content Link Types</a></td>
     <td>Content Links define references to content stored outside of Grooper, such as file on a file system or a document in
a <a href='Grooper_Node_Types/Infrastructure/CMIS_Repository.htm'>CMIS Repository</a>.
</td>
  </tr>
  <tr>
     <td><a href='Data_Element_Types/Data_Element_Types.htm'>Data Element Types</a></td>
     <td>
Represents an element of data.

</td>
  </tr>
  <tr>
     <td><a href='Data_Element_Profile_Types/Data_Element_Profile_Types.htm'>Data Element Profile Types</a></td>
     <td>Data Element Profiles store settings for Data Elements such as sections, tables, and fields on a Content Type. Data Element Profiles are created and managed on the "Data Element Profiles" tab of any Content Type, using the
<a href='../User_Interface_Reference/Grooper_UI_Elements/Other_Grooper_Controls/Data_Element_Profile_Manager.htm'>Data Element Profile Manager</a> control.  They allow settings for data elements to be customized for a specific document type.
For example, a Data Element Profile could be used to make a field read-only on Document Type A, but leave it editable on
Document Type B.
</td>
  </tr>
  <tr>
     <td><a href='Data_Instance_Types/Data_Instance_Types.htm'>Data Instance Types</a></td>
     <td>Defines an instance of text data on a document. A Data Instance represents a segment of text content within a document, and can represent anything from a single character to
the entire content of a document.  Data Instance objects are the input to and the output from all ESPâ„¢ extraction operations, and
also represent the format in which document metadata is stored by the <a href='Activity_Types/Unattended_Activities/Extraction.htm'>Extraction</a> activity.

<p>DataInstances are created during the extraction process, when the raw OCR data for a <a href='Batch_Object_Types/Batch_Processing/Batch_Folder.htm'>Batch Folder</a> object is loaded, forming a <a href='Data_Instance_Types/Document_Instance.htm'>DocumentInstance</a>
which represents the entire content of the document.  When <a href='Activity_Types/Unattended_Activities/Extraction.htm'>Extraction</a> is performed, this root instance becomes the source from which all
data elements at the root of the <a href='Data_Element_Types/Data_Extraction/Data_Model.htm'>Data Model</a> will perform their extraction, and the extracted results will be saved as children of the
<a href='Data_Instance_Types/Document_Instance.htm'>DocumentInstance</a>.</p><p>Data Instance serves as the base class for </p>
</td>
  </tr>
  <tr>
     <td><a href='Database_Connection_Settings_Types/Database_Connection_Settings_Types.htm'>Database Connection Settings Types</a></td>
     <td></td>
  </tr>
  <tr>
     <td><a href='Edge_Adjustment_Types/Edge_Adjustment_Types.htm'>Edge Adjustment Types</a></td>
     <td>Defines a mechanism for adjusting edges of a region in <a href='Section_Extract_Method_Types/Geometric.htm'>Geometric</a> section extraction.
</td>
  </tr>
  <tr>
     <td><a href='Export_Provider_Types/Export_Provider_Types.htm'>Export Provider Types</a></td>
     <td>Export providers define export connectivity to external systems such as file systems, content management repositories, mail servers, and etc. Export providers are used by the Export Document activity.
</td>
  </tr>
  <tr>
     <td><a href='Grooper_Node_Types/Grooper_Node_Types.htm'>Grooper Node Types</a></td>
     <td>Grooper Nodes are objects which appear in the <a href='../Getting_Started/Grooper_Concepts/Grooper_Tree_Structure.htm'>Grooper Tree Structure</a>.  Every object at every level of the tree structure, including folders,
are considered Grooper Nodes. All Grooper Node objects support a base set of properties and behaviors common to all node types, such as:
<ul><li><b>Name Property</b> - All node types have a name property.</li><li><b>Allowed Child Types</b> - Each node type defines a set of allowed child types, defining what type of objects may be added as
children.  For example, a <a href='Grooper_Node_Types/Data_Extraction/Data_Type.htm'>Data Type</a> object may have <a href='Grooper_Node_Types/Data_Extraction/Data_Type.htm'>Data Types</a> or <a href='Grooper_Node_Types/Data_Extraction/Data_Format.htm'>Data Formats</a> and children, but cannot have a <a href='Grooper_Node_Types/Infrastructure/CMIS_Repository.htm'>CMIS Repository</a> as a child.</li><li><b>Lock Management</b> - Grooper's parallel processing sometimes requires synchronized access to node in the tree structure, to prevent multiple
running processes or threads from attempting to modify the same object at the same time.</li><li><b>ACL Management</b> - Access Control Lists define who can access branches of the Grooper tree structure.</li><li><b>File Management</b> - Each node has a private file store, where files associated with the object are stored.  For example, <a href='Batch_Object_Types/Batch_Processing/Batch_Page.htm'>Batch Page</a> objects
store an image which represents the page, and <a href='Data_Element_Types/Data_Extraction/Data_Model.htm'>Data Model</a> objects store scripting projects made up of many files.</li><li><b>Reference Management</b> - Some objects are configured with references to other objects, such as an <a href='Grooper_Node_Types/Profiles/OCR_Profile.htm'>OCR Profile</a> configured <a href='Grooper_Node_Types/Profiles/IP_Profile.htm'>IP Profile</a> for
pre-OCR image cleanup.  In such cases, it is important that users cannot delete the IP Profile while it is being used by the OCR Profile.  It is also
important that if the OCR Profile is exported from Grooper, that the IP Profile it depends on is also exported.  The reference management system
keeps track of which objects are referencing other objects.</li></ul><p>The common properties of any node may be viewed in <a href='../User_Interface_Reference/Grooper_Administration.htm'>Grooper Administration</a> using the Node Properties Viewer, found on the 'Node Properties' tab.</p>
</td>
  </tr>
  <tr>
     <td><a href='Import_Provider_Types/Import_Provider_Types.htm'>Import Provider Types</a></td>
     <td>Import providers enable import of file-based content from a variety of sources such as file systems, mail servers, and content repositories. Import providers can be used in two ways:
<ul><li>To perform user-directed imports from the <a href='../User_Interface_Reference/Grooper_UI_Elements/Other_Grooper_Controls/Batch_Manager.htm'>Batch Manager</a> control.</li><li>To perform scheduled imports using the <a href='Service_Instance_Types/Import_Watcher.htm'>Import Watcher</a> service.</li></ul>
</td>
  </tr>
  <tr>
     <td><a href='IP_Command_Types/IP_Command_Types.htm'>IP Command Types</a></td>
     <td>IP commands perform image processing work, such as image cleanup, format conversion, or feature detection. IP Commands are used to construct <a href='Grooper_Node_Types/Profiles/IP_Profile.htm'>IP Profiles</a>, and are also used as stand-alone properties on some Grooper types.
<p>Some IP Commands modify the images they process, while other IP Commands simply detect features in an image, without
modifying the image in any way.</p><p>Each IP Command defines a set of supported pixel formats.  If an image with an unsupported pixel format is encountered,
the command will take no action.</p>
</td>
  </tr>
  <tr>
     <td><a href='Layout_Provider_Types/Layout_Provider_Types.htm'>Layout Provider Types</a></td>
     <td>Layout Providers define the various layouts in which arrays can be detected.
</td>
  </tr>
  <tr>
     <td><a href='MIME_Type_Handler_Types/MIME_Type_Handler_Types.htm'>MIME Type Handler Types</a></td>
     <td>MIME type handlers define properties and commands which may be applied to a <a href='Batch_Object_Types/Batch_Processing/Batch_Folder.htm'>Batch Folder</a> object with a specific MIME type.
</td>
  </tr>
  <tr>
     <td><a href='Object_Command_Types/Object_Command_Types.htm'>Object Command Types</a></td>
     <td>Object Commands perform specialized tasks on one or more Grooper Objects.
</td>
  </tr>
  <tr>
     <td><a href='OCR_Engine_Types/OCR_Engine_Types.htm'>OCR Engine Types</a></td>
     <td>OCR Engines extract text from images using optical character recognition. Each <a href='Grooper_Node_Types/Profiles/OCR_Profile.htm'>OCR Profile</a> in Grooper is configured with an OCR Engine.  The OCR Engine selection defines the settings
which will be exposed to configure the OCR Profile, and controls the runtime component used for text extraction.
<p>NOTE: Some OCR engines require third-party installations and licensing.</p>
</td>
  </tr>
  <tr>
     <td><a href='Protocol_Settings_Types/Protocol_Settings_Types.htm'>Protocol Settings Types</a></td>
     <td>The base class for all protocol settings, which defines settings for a scanner protocol (TWAIN or Isis).
</td>
  </tr>
  <tr>
     <td><a href='Report_Types/Report_Types.htm'>Report Types</a></td>
     <td>Defines a Grooper Report. Can be used to author Reports by providing a Report Definition Language Client file as a Stream, Data Source(s) for the rdlc resource, and optional Report Parameters.
For convenience, the base class GetScriptResource method can be used to return the .Rdlc report class by name.
</td>
  </tr>
  <tr>
     <td><a href='Section_Extract_Method_Types/Section_Extract_Method_Types.htm'>Section Extract Method Types</a></td>
     <td>A Section Extract Method defines an extraction method for use with <a href='Data_Element_Types/Data_Extraction/Data_Section.htm'>Data Section</a> objects.
</td>
  </tr>
  <tr>
     <td><a href='Separation_Provider_Types/Separation_Provider_Types.htm'>Separation Provider Types</a></td>
     <td></td>
  </tr>
  <tr>
     <td><a href='Service_Instance_Types/Service_Instance_Types.htm'>Service Instance Types</a></td>
     <td>Service Instances represent processes which may be installed as Grooper services, such as the <a href='Service_Instance_Types/Grooper_Licensing.htm'>Grooper Licensing</a> service or the <a href='Service_Instance_Types/Task_Processing.htm'>Task Processing</a> service. Service instances must be installed from <a href='../User_Interface_Reference/Grooper_Configuration.htm'>Grooper Configuration</a>, using the Service Manager Control on the "Services" tab.  After initial installation, service
instances may be started, stopped, or configured using the <a href='../User_Interface_Reference/Grooper_UI_Elements/Other_Grooper_Controls/Service_Instance_Viewer.htm'>Service Instance Viewer</a> control in <a href='../User_Interface_Reference/Grooper_Administration.htm'>Grooper Administration</a>.  The Service Instance Viewer can be accessed
from the property panel of any <a href='Grooper_Node_Types/Infrastructure/Machine.htm'>Machine</a> object in Grooper.  To manage all services for an entire Grooper repository, use the <a href='../User_Interface_Reference/Grooper_UI_Elements/Other_Grooper_Controls/Service_Instance_Viewer.htm'>Service Instance Viewer</a> found on the
<a href='Grooper_Node_Types/Infrastructure/Machines_Folder.htm'>Machines Folder</a> (immediately below the <a href='Grooper_Node_Types/Infrastructure/Infrastructure_Folder.htm'>Infrastructure Folder</a>).
</td>
  </tr>
  <tr>
     <td><a href='Storage_Type_Types/Storage_Type_Types.htm'>Storage Type Types</a></td>
     <td></td>
  </tr>
  <tr>
     <td><a href='Table_Extract_Method_Types/Table_Extract_Method_Types.htm'>Table Extract Method Types</a></td>
     <td>Defines settings and logic for a <a href='Data_Element_Types/Data_Extraction/Data_Section.htm'>Data Section</a> extraction method.
</td>
  </tr>
  <tr>
     <td><a href='Variable_Provider_Types/Variable_Provider_Types.htm'>Variable Provider Types</a></td>
     <td></td>
  </tr>
</table>

<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);

highlightSearch();
//-->
//]]></script>
</body>
</html>
